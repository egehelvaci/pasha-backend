generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:JQFOWXIpEnSvchuIMXpPpGHvCYVOSUdx@yamabiko.proxy.rlwy.net:17072/railway"
}

model UserType {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  email       String   @unique
  name        String
  avatar      String?
  createdAt   DateTime @default(now()) @map("created_at")
  credit      Decimal  @default(0) @db.Decimal(10, 2)
  debit       Decimal  @default(0) @db.Decimal(10, 2)
  isActive    Boolean  @default(true) @map("is_active")
  password    String
  phoneNumber String?  @map("phone_number")
  surname     String
  userId      String   @id @default(uuid()) @map("user_id")
  username    String   @unique
  userTypeId  Int      @map("user_type_id")
  userType    UserType @relation(fields: [userTypeId], references: [id])
}

model Collection {
  collectionId String    @id @default(uuid()) @map("collection_id")
  name         String
  description  String?
  code         String    @unique
  catalogOrder Int       @map("catalog_order")
  currency     Currency  @default(TRY)
  isActive     Boolean   @default(true) @map("is_active")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  products     Product[]
}

model Product {
  productId    String     @id @default(uuid()) @map("product_id")
  name         String
  description  String
  price        Decimal    @db.Decimal(10, 2)
  stock        Int
  barcode      String
  quality      String
  width        Float
  height       Float
  cut          Boolean
  customWeight Float?     @map("custom_weight")
  customHeight Float?     @map("custom_height")
  productImage String?    @map("product_imageurl")
  collectionId String     @map("collection_id")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  collection   Collection @relation(fields: [collectionId], references: [collectionId])
}

enum Currency {
  TRY
  USD
  EUR
}
